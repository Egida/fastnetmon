version: 2.1
parameters:
  fastnetmon_build_version:
    type: string
    default: "1.2.4"
orbs:
  win: circleci/windows@4.1
jobs:
  build_windows2019:
    executor: win/server-2019
    steps:
      - run: 'Write-Host "Hello from FastNetMon"'
  build_windows2022:
    executor: win/server-2022
    steps:
      - run: 'Write-Host "Hello from FastNetMon"'
  build_macos:
    macos:
      xcode: 13.2.1
    steps:
      - checkout
      - run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - run: cp src/packaging/homebrew/fastnetmon.rb /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/fastnetmon.rb
      - run: brew install --build-from-source --HEAD --verbose --debug fastnetmon
  build_debian_upstream_package:
    machine:
      image: ubuntu-2004:current
    resource_class: large
    parameters:
      debian_codename:
        type: string
    steps:
      - run:
          name: Create folder to share data between host and Docker container with relaxed permissions to allow use of save / restore cache logic
          command: sudo mkdir /data; sudo chmod 777 /data
      - run:
          name: Docker with priviledged mode to run chroot inside and we use tail -f to keep container running
          command: sudo docker run -d -v /sys/fs/cgroup/:/sys/fs/cgroup:ro -v /data:/data:rw --privileged --cap-add SYS_ADMIN  --name linux_priviledged_container debian:bullseye tail -f /dev/null
      - run: sudo docker exec -it linux_priviledged_container apt-get update; true
      - run: sudo docker exec -it linux_priviledged_container apt install -y dpkg-dev git pbuilder
      - run: sudo docker exec -it linux_priviledged_container git clone https://github.com/pavel-odintsov/fastnetmon
      - run: sudo docker exec -it linux_priviledged_container git clone https://salsa.debian.org/debian/fastnetmon.git fastnetmon-debian-salsa
      - run: sudo docker exec -it linux_priviledged_container tar -czf fastnetmon_$(sudo docker exec -it linux_priviledged_container head -n 1 fastnetmon-debian-salsa/debian/changelog|awk '{print $2}'|sed 's/[()]//g' | sed -E 's/(\-[0-9]+)?$//').orig.tar.gz fastnetmon
      - run: sudo docker exec -it linux_priviledged_container ls -la
      - run: sudo docker exec -it linux_priviledged_container bash -c "cd fastnetmon && rm -rf debian && cp -a ../fastnetmon-debian-salsa/debian/ . && dpkg-buildpackage -S -sa -d"
      - run:
          name: List produced source files
          command: sudo docker exec -it linux_priviledged_container ls -la
      - run:
          name: Show content of data folder and permissions for it
          command: ls -la /data
      - run: 
          name: Check that we have anything in data folder on VM
          command: ls -la /data 
      - run:
          name: "Run pbuilder run Docker if we have no image in place"
          command: "sudo docker exec -it linux_priviledged_container pbuilder --create --basetgz /data/debian_base.tgz --distribution << parameters.debian_codename >>"
      - run: ls -la /data
      - run: sudo docker exec -it linux_priviledged_container pbuilder --build --basetgz /data/debian_base.tgz --debbuildopts "-sa" /fastnetmon_$(sudo docker exec -it linux_priviledged_container head -n 1 fastnetmon-debian-salsa/debian/changelog|awk '{print $2}'|sed 's/[()]//g').dsc
  build_docker_x86_64:
    machine:
      image: ubuntu-2004:current
    steps:
     - checkout
     - run: docker build -t ghcr.io/pavel-odintsov/fastnetmon-community:1.2.1 -t ghcr.io/pavel-odintsov/fastnetmon-community:latest - < src/Dockerfile
     - run: sudo docker images
     - run: echo $CR_PAT | sudo docker login ghcr.io -u pavel-odintsov --password-stdin
     - run: sudo docker push ghcr.io/pavel-odintsov/fastnetmon-community:1.2.1
     - run: sudo docker push ghcr.io/pavel-odintsov/fastnetmon-community:latest
  build_docker_arm64:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.medium
    steps:
     - checkout
     - run: docker build --build-arg installer_file_name=installer_arm64 -t ghcr.io/pavel-odintsov/fastnetmon-community:1.2.1 -t ghcr.io/pavel-odintsov/fastnetmon-community:latest - < src/Dockerfile
     - run: sudo docker images
  build_fedora_upstream:
    parameters:
      docker_image:
        type: string
    docker:
      - image: << parameters.docker_image >>
    resource_class: large
    steps:
      - checkout
      - run: dnf install -y rpm-build rpmdevtools dnf-plugins-core
      - run: mkdir -p ~/rpmbuild/SPECS
      - run: cp src/packaging/fedora/fastnetmon.spec ~/rpmbuild/SPECS
      - run:
          name: Install build dependencies
          command: dnf builddep -y ~/rpmbuild/SPECS/fastnetmon.spec
      - run:
          name: Download source
          command: cd ~/rpmbuild && spectool -g -R SPECS/fastnetmon.spec
      - run:
          name: Added sysusers file to SOURCES
          command: cp src/packaging/fedora/fastnetmon.sysusers ~/rpmbuild/SOURCES
      - run:
          name: Build source RPM
          command: cd ~/rpmbuild/SPECS && rpmbuild -bs fastnetmon.spec
      - store_artifacts:
          path: /root/rpmbuild/SRPMS
      - run:
          name: Build RPM
          command: cd ~/rpmbuild/SPECS && rpmbuild -bb fastnetmon.spec
      - store_artifacts:
          path: /root/rpmbuild/RPMS/x86_64

  build_epel9_upstream:
    docker:
      - image: almalinux:9
    resource_class: large
    steps:
      - checkout
      - run: dnf install -y rpm-build rpmdevtools dnf-plugins-core
      - run: dnf install -y dnf-plugins-core
      - run: dnf config-manager --set-enabled crb
      - run: dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
      - run: mkdir -p ~/rpmbuild/SPECS
      # It's copy of Fedora SPEC file with capnproto disabled because we have no package for it in EPEL: https://src.fedoraproject.org/rpms/capnproto
      - run: cp src/packaging/epel/fastnetmon.spec ~/rpmbuild/SPECS
      - run:
          name: Install build dependencies
          command: dnf builddep -y ~/rpmbuild/SPECS/fastnetmon.spec
      - run:
          name: Download source
          command: cd ~/rpmbuild && spectool -g -R SPECS/fastnetmon.spec
      - run:
          name: Added sysusers file to SOURCES
          command: cp src/packaging/fedora/fastnetmon.sysusers ~/rpmbuild/SOURCES
      - run:
          name: Build source RPM
          command: cd ~/rpmbuild/SPECS && rpmbuild -bs fastnetmon.spec
      - store_artifacts:
          path: /root/rpmbuild/SRPMS
      - run:
          name: Build RPM
          command: cd ~/rpmbuild/SPECS && rpmbuild -bb fastnetmon.spec
      - store_artifacts:
          path: /root/rpmbuild/RPMS/x86_64

  build_ubuntu:
    parameters:
      docker_image:
        type: string
      ubuntu_version:
        type: string
    docker:
      - image: << parameters.docker_image >>
    resource_class: large
    steps:
      - checkout
      - run: apt-get update; true
      - run: apt-get install -y perl wget python3-pip
      - run: pip3 install s3cmd
      - run:
          name: install_required_packages
          no_output_timeout: 20m
          command: perl src/scripts/fastnetmon_build.pl --install_dependency_packages_only
      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_JOB }}_dependencies_15_10_2022"
      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_JOB }}_gcc_30_05_2022"
      - run:
          name: install_gcc
          no_output_timeout: 120m 
          command: perl src/scripts/fastnetmon_build.pl --build_gcc_only
      - save_cache:
          key: "{{ .Environment.CIRCLE_JOB }}_gcc_30_05_2022"
          paths:
            - /opt/fastnetmon-community/libraries/gcc1210
      - run:
          name: install_dependencies
          no_output_timeout: 180m
          command: perl src/scripts/fastnetmon_build.pl --build_dependencies_only
      - run:
          name: collect_debug
          command: cat /tmp/fastnetmon_install.log
          when: on_fail
      - save_cache:
          key: "{{ .Environment.CIRCLE_JOB }}_dependencies_15_10_2022"
          paths:
            - /opt
      - run: perl src/scripts/fastnetmon_build.pl --build_fastnetmon_only
      - run: perl src/scripts/build_libary_bundle.pl /opt/fastnetmon_libraries_bundle.tar.gz
      - store_artifacts:
          path: /opt/fastnetmon_libraries_bundle.tar.gz
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: src/scripts/build_any_package.pl deb /opt/fastnetmon_libraries_bundle.tar.gz << pipeline.parameters.fastnetmon_build_version >> ubuntu << parameters.ubuntu_version >>
      - store_artifacts:
          path: /tmp/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_amd64.deb
      - run: s3cmd --disable-multipart  --host=storage.googleapis.com --host-bucket="%(bucket).storage.googleapis.com" put /tmp/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_amd64.deb s3://fastnetmon_community_packages/<< pipeline.parameters.fastnetmon_build_version >>/ubuntu/<< parameters.ubuntu_version >>/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_amd64.deb
      - run: cp src/fastnetmon.conf /etc/fastnetmon.conf
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon_client
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon_api_client
      - run: /opt/fastnetmon-community/app/bin/fastnetmon --configuration_check
  build_debian:
    parameters:
      docker_image:
        type: string
      debian_version:
        type: string
    docker:
      - image: << parameters.docker_image >>
    resource_class: large
    steps:
      - checkout
      - run: apt-get update; true
      - run: apt-get install -y perl wget python3-pip
      - run: pip3 install s3cmd
      - run:
          name: install_required_packages
          no_output_timeout: 20m 
          command: perl src/scripts/fastnetmon_build.pl --install_dependency_packages_only
      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_JOB }}_dependencies_15_10_2022"
      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_JOB }}_gcc_30_05_2022"
      - run:
          name: install_gcc
          no_output_timeout: 120m 
          command: perl src/scripts/fastnetmon_build.pl --build_gcc_only
      - save_cache:
          key: "{{ .Environment.CIRCLE_JOB }}_gcc_30_05_2022"
          paths:
            - /opt/fastnetmon-community/libraries/gcc1210
      - run:
          name: install_dependencies
          no_output_timeout: 180m 
          command: perl src/scripts/fastnetmon_build.pl --build_dependencies_only
      - run:
          name: collect_debug
          command: cat /tmp/fastnetmon_install.log
          when: on_fail
      - save_cache:
          key: "{{ .Environment.CIRCLE_JOB }}_dependencies_15_10_2022"
          paths:
            - /opt
      - run: perl src/scripts/fastnetmon_build.pl --build_fastnetmon_only
      - run: perl src/scripts/build_libary_bundle.pl /opt/fastnetmon_libraries_bundle.tar.gz
      - store_artifacts:
          path: /opt/fastnetmon_libraries_bundle.tar.gz
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: src/scripts/build_any_package.pl deb /opt/fastnetmon_libraries_bundle.tar.gz << pipeline.parameters.fastnetmon_build_version >> debian << parameters.debian_version >>
      - store_artifacts:
          path: /tmp/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_amd64.deb
      - run: s3cmd --disable-multipart  --host=storage.googleapis.com --host-bucket="%(bucket).storage.googleapis.com" put /tmp/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_amd64.deb s3://fastnetmon_community_packages/<< pipeline.parameters.fastnetmon_build_version >>/debian/<< parameters.debian_version >>/fastnetmon_<< pipeline.parameters.fastnetmon_build_version >>_amd64.deb
      - run: cp src/fastnetmon.conf /etc/fastnetmon.conf
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon_client
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon_api_client
      - run: /opt/fastnetmon-community/app/bin/fastnetmon --configuration_check
  build_centos:
    parameters:
      docker_image:
        type: string
      centos_version:
        type: string
    docker:
      - image: << parameters.docker_image >>
    resource_class: large
    steps:
      - checkout
      - run: yum install -y perl wget python3-pip perl-Archive-Tar perl-Env
      - run: pip3 install s3cmd
      - run:
          name: install_required_packages
          no_output_timeout: 20m 
          command: perl src/scripts/fastnetmon_build.pl --install_dependency_packages_only
      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_JOB }}_dependencies_15_10_2022"
      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_JOB }}_gcc_30_05_2022"
      - run:
          name: install_gcc
          no_output_timeout: 120m 
          command: perl src/scripts/fastnetmon_build.pl --build_gcc_only
      - save_cache:
          key: "{{ .Environment.CIRCLE_JOB }}_gcc_30_05_2022"
          paths:
            - /opt/fastnetmon-community/libraries/gcc1210
      - run:
          name: install_dependencies
          no_output_timeout: 180m 
          command: perl src/scripts/fastnetmon_build.pl --build_dependencies_only
      - run:
          name: collect_debug
          command: cat /tmp/fastnetmon_install.log
          when: on_fail
      - save_cache:
          key: "{{ .Environment.CIRCLE_JOB }}_dependencies_15_10_2022"
          paths:
            - /opt
      - store_artifacts:
          path: /tmp/fastnetmon_install.log
      - run: perl src/scripts/fastnetmon_build.pl --build_fastnetmon_only
      - run: perl src/scripts/build_libary_bundle.pl /opt/fastnetmon_libraries_bundle.tar.gz
      - store_artifacts:
          path: /opt/fastnetmon_libraries_bundle.tar.gz
      - run: src/scripts/build_any_package.pl rpm /opt/fastnetmon_libraries_bundle.tar.gz << pipeline.parameters.fastnetmon_build_version >> centos << parameters.centos_version >>
      - store_artifacts:
          path: /tmp/result_data/fastnetmon-<< pipeline.parameters.fastnetmon_build_version >>-1.el<< parameters.centos_version >>.x86_64.rpm
      - run: s3cmd --disable-multipart  --host=storage.googleapis.com --host-bucket="%(bucket).storage.googleapis.com" put /tmp/result_data/fastnetmon-<< pipeline.parameters.fastnetmon_build_version >>-1.el<< parameters.centos_version >>.x86_64.rpm s3://fastnetmon_community_packages/<< pipeline.parameters.fastnetmon_build_version >>/centos/<< parameters.centos_version >>/fastnetmon-<< pipeline.parameters.fastnetmon_build_version >>-1.el<< parameters.centos_version >>.x86_64.rpm
      - run: cp src/fastnetmon.conf /etc/fastnetmon.conf
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon_client
      - run: ldd /opt/fastnetmon-community/app/bin/fastnetmon_api_client
      - run: /opt/fastnetmon-community/app/bin/fastnetmon --configuration_check
workflows:
  version: 2
  all_distros:
    jobs:
      - build_centos:
          docker_image: centos:centos7
          centos_version: "7"
          name: "centos7"
      - build_centos:
          docker_image: almalinux:8
          centos_version: "8"
          name: "centos8"
      - build_centos:
          docker_image: almalinux:9
          centos_version: "9"
          name: "centos9"
      - build_ubuntu:
          docker_image: "ubuntu:jammy"
          ubuntu_version: "22.04"
          name: "ubuntu2204"
      - build_ubuntu:
          docker_image: "ubuntu:focal"
          ubuntu_version: "20.04"
          name: "ubuntu2004"
      - build_ubuntu:
          docker_image: "ubuntu:bionic"
          ubuntu_version: "18.04"
          name: "ubuntu1804"
      - build_ubuntu:
          docker_image: "ubuntu:xenial"
          ubuntu_version: "16.04"
          name: "ubuntu1604"
      - build_debian:
          docker_image: "debian:stretch"
          debian_version: "9"
          name: "debian9"
      - build_debian:
          docker_image: "debian:buster"
          debian_version: "10"
          name: "debian10"
      - build_debian:
          docker_image: "debian:bullseye"
          debian_version: "11"
          name: "debian11"
      - build_docker_x86_64:
          name: "Build Docker image on x86_64 platform"
      - build_docker_arm64:
          name: "Build Docker image on ARM64 platform"
      - build_debian_upstream_package:
          name: "Debian Sid Upstream Build"
          debian_codename: "sid"
      - build_debian_upstream_package:
          name: "Debian Bullseye Upstream Backports Build"
          debian_codename: "bullseye"
      - build_fedora_upstream:
          name: "Fedora 35 Upstream RPM"
          docker_image: fedora:35
      - build_fedora_upstream:
          name: "Fedora 36 Upstream RPM"
          docker_image: fedora:36
      - build_fedora_upstream:
          name: "Fedora 37 Upstream RPM"
          docker_image: fedora:37
      - build_epel9_upstream:
          name: "EPEL 9 RPM"
      - build_macos:
          name: "Build on MacOS"
      - build_windows2022:
          name: "Build on Windows Server 2022"
      - build_windows2019:
          name: "Build on Windows Server 2019"
